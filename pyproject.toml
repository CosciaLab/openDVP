[project]
name = "openDVP"
version = "0.2.2"
description = "open-sourced Deep Visual Proteomics toolkit"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [{name = "Jose Nimo", email = "jose.nimo@mdc-berlin.de"}]
maintainers = [{ name = "Jose Nimo", email = "jose.nimo@mdc-berlin.de" }]

# urls.Documentation = "https://decoupler.readthedocs.io/"
urls.Homepage = "https://github.com/CosciaLab/openDVP"
urls.Source = "https://github.com/CosciaLab/openDVP"


dependencies = [
    "anndata>=0.9.1",
    "geopandas>=0.14",
    "ipykernel",
    "numba>=0.55.0",
    "numpy",
    "pandas",
    "matplotlib<3.9.0",
    "seaborn",
    "scanpy",
    "plotly>=5.24.1,<6",
    "shapely>=2.0.1",
    "loguru",
    "scikit-learn",
    "scikit-image",
    "adjusttext",
    "pingouin",
    "libpysal",
    "esda",
    "upsetplot",
    "perseuspy>=0.3.9,<0.4"]

[project.optional-dependencies]
spatialdata = [
    "spatialdata==0.4.0",
    "napari-spatialdata",
    "pyqt5",
]
dev = [
    "ruff",
    "pytest",
    "tox",
    "hatchling",
]

docs = [
    "myst_nb",
    "sphinx_copybutton",
    "sphinxcontrib-bibtex", 
    "sphinx_tabs", 
    "sphinxext-opengraph", 
    "sphinx-book-theme",
    "twine",
    "sphinx",
    "myst-parser",
    "nbsphinx",
    "sphinx_autodoc_typehints"
]

[tool.pixi.environments.default]
features = ["docs"]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "osx-64", "osx-arm64"]
# so far a single wheel is working
# we might need platform specific dependencies and wheels

[tool.pixi.pypi-dependencies]
opendvp = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.dependencies]

## FORMATTING AND LINTING ##

[tool.ruff]
line-length = 120
target-version = "py311"  # Match your supported Python version
per-file-ignores = { "tests/**/*.py" = ["S101"] } #ignores assert rule in tests
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "env",
    "docs",
    "notebooks",
    "tests/data",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # Pyflakes
    "B",    # flake8-bugbear
    "I",    # isort (import sorting)
    "UP",   # pyupgrade (modernize syntax)
    "C90",  # mccabe (complexity)
    "D",    # pydocstyle (docstrings)
    "A",    # flake8-builtins
    "S",    # flake8-bandit (security)
    "SIM",  # flake8-simplify
    "PD",   # pandas-vet
    "ANN",  # flake8-annotations
]

ignore = [
    "D100", # Ignore missing docstring in public module
    "D104", # Ignore missing docstring in public package
    "ANN101", # Missing type annotation for self
    "ANN102", # Missing type annotation for cls
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
